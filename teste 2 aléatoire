shared.stop = true
wait(1)
shared.stop = false

shared.nospacedelay = shared.nospacedelay or false

local str = shared.scr or "qw[er]ty"
local FinishTime = shared.ftime or 10

local vim = game:GetService("VirtualInputManager")

local nstr = string.gsub(str, "[\\\n]", "")

local baseDelay = shared.tempo and (6 / shared.tempo) or shared.delay or FinishTime / (string.len(nstr) / 1.05)

local function randomShortDelay()
    return math.random(10, 100) / 1000
end

local function randomLongDelay()
    return math.random(150, 500) / 1000
end

local function doshift(key)
    if key:upper() ~= key then return end
    if tonumber(key) then return end

    vim:SendKeyEvent(true, 304, false, nil)
end

local function endshift()
    vim:SendKeyEvent(false, 304, false, nil)
end

local function pressKey(key)
    local delay = randomLongDelay()
    spawn(function()
        doshift(key)
        vim:SendKeyEvent(true, string.byte(key:lower()), false, nil)
        wait(delay)
        vim:SendKeyEvent(false, string.byte(key:lower()), false, nil)
        endshift()
    end)
    wait(randomShortDelay())
end

local function pressMultipleKeys(keys)
    local randomIndex = math.random(1, #keys)
    for i, key in ipairs(keys) do
        local extraDelay = (i == randomIndex) and 0.1 or 0
        spawn(function()
            doshift(key)
            vim:SendKeyEvent(true, string.byte(key:lower()), false, nil)
            wait(0.1 + extraDelay)
            vim:SendKeyEvent(false, string.byte(key:lower()), false, nil)
            endshift()
        end)
    end
    wait(randomShortDelay())
end

local rem = true
local bracketQueue = {}

for i = 1, #str do
    if shared.stop == true then return end

    local c = str:sub(i, i)

    if c == "[" then
        rem = false
        continue
    elseif c == "]" then
        rem = true
        if #bracketQueue > 0 then
            pcall(function()
                pressMultipleKeys(bracketQueue)
            end)
        end
        bracketQueue = {}
        continue
    elseif c == " " or string.byte(c) == 10 then
        c = "|"
    end

    if c == "|" or c == "-" then
        wait(randomShortDelay())
        continue
    end

    if not rem then
        table.insert(bracketQueue, c)
        continue
    end

    pcall(function()
        pressKey(c)
    end)
end
